Cimager.Images.Names                            = [image.i.fake]
Cimager.Images.shape                            = [12288, 12288]
Cimager.Images.cellsize                         = [2arcsec, 2arcsec]
Cimager.Images.image.i.fake.direction    = [12h34m56.789, -12.34.56.78, J2000]
Cimager.Images.image.i.fake.nchan        = 1
Cimager.Images.image.i.fake.nterms       = 2
Cimager.Images.image.i.fake.frequency    = [0.856e9,1.096e9]
# note, this number of groups matches nterms defined above (nworkergroups = 2*nterms - 1, or 1 for serial Taylor terms)
# for parallel TT, the job would require N*nworkergroups + 1 rank, where N is an integer number
Cimager.nworkergroups                           = 3
Cimager.ncycles                                 = 10
# optional delay emulaating solver or normal equation calculation in seconds (default is 10s)
Cimager.delay.default                           = 5
# if rank specific delay is not defined as below, the "delay.default" will be used
Cimager.delay.rank3                             = 20
